apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply plugin: 'com.neenbedankt.android-apt'

final Properties props = new Properties()
props.load(new FileInputStream('build.properties'))

def artifactoryUrl = props['artifactory.url']
def artifactoryUsername = props['artifactory.credentials.username']
def artifactoryPassword = props['artifactory.credentials.password']

def packageName = 'com.example.podlibrary'
def libraryVersion = '0.3.11'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName libraryVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile('com.android.support:design:23.1.0')
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.google.dagger:dagger:2.8'
    apt 'com.google.dagger:dagger-compiler:2.8'
    apt 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'
    compile "com.lalamove.base:base:$libraryVersion"
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId packageName
            version = libraryVersion
            artifactId project.getName()

            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.getByName("_releaseCompile").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.moduleGroup)
                    dependency.appendNode('artifactId', it.moduleName)
                    dependency.appendNode('version', it.moduleVersion)
                }
            }
        }
    }
}

artifactory {
    contextUrl = artifactoryUrl

    publish {
        repository {
            repoKey = 'libs-release-local'
            username = artifactoryUsername
            password = artifactoryPassword
            maven = true

        }
        defaults {
            publications('aar')
            publishArtifacts = true
            publishPom = true
            publishIvy = false

            properties = ['qa.level': 'basic', 'dev.team': 'core']
        }
    }
    resolve {
        repository {
            repoKey = 'libs-release'
            username = artifactoryUsername
            password = artifactoryPassword
            maven = true
        }
    }
}
